apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yaml convert
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
  namespace: kube-system
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
      - image: grafana/grafana:master
        name: grafana
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yaml convert
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
  namespace: kube-system
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: grafana
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yaml convert
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    io.kompose.service: loki
  name: loki
  namespace: kube-system
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: loki
    spec:
      containers:
      - args:
        - -config.file=/etc/loki/local-config.yaml
        image: grafana/loki:latest
        name: loki
        ports:
        - containerPort: 3100
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yaml convert
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    io.kompose.service: loki
  name: loki
  namespace: kube-system
spec:
  ports:
  - name: "3100"
    port: 3100
    targetPort: 3100
  selector:
    io.kompose.service: loki
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: promtail-claim0
  name: promtail-claim0
  namespace: kube-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yaml convert
    kompose.version: 1.18.0 (06a2e56)
  creationTimestamp: null
  labels:
    io.kompose.service: promtail
  name: promtail
  namespace: kube-system
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: promtail
    spec:
      containers:
      - args:
        - -config.file=/etc/promtail/docker-config.yaml
        image: grafana/promtail:latest
        name: promtail
        resources: {}
        volumeMounts:
        - mountPath: /var/log
          name: promtail-claim0
      restartPolicy: Always
      volumes:
      - name: promtail-claim0
        persistentVolumeClaim:
          claimName: promtail-claim0
status: {}
